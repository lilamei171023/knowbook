<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.excellent.knowbookcommon.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.excellent.knowbookcommon.model.pojo.Book">
    <id column="book_id" jdbcType="VARCHAR" property="bookId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_info" jdbcType="VARCHAR" property="bookInfo" />
    <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
    <result column="book_quality" jdbcType="VARCHAR" property="bookQuality" />
    <result column="book_Press" jdbcType="VARCHAR" property="bookPress" />
    <result column="book_before_price" jdbcType="DOUBLE" property="bookBeforePrice" />
    <result column="book_now_price" jdbcType="DOUBLE" property="bookNowPrice" />
    <result column="book_picture" jdbcType="VARCHAR" property="bookPicture" />
    <result column="book_style" jdbcType="VARCHAR" property="bookStyle" />
    <result column="book_theme" jdbcType="VARCHAR" property="bookTheme" />
    <result column="book_language" jdbcType="VARCHAR" property="bookLanguage" />
    <result column="book_remarks" jdbcType="VARCHAR" property="bookRemarks" />
    <result column="book_is_sell" jdbcType="INTEGER" property="bookIsSell" />
    <result column="collection_count" jdbcType="INTEGER" property="collectionCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="deteled" jdbcType="INTEGER" property="deteled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, id, book_name, book_info, book_author, book_quality, book_Press, book_before_price, 
    book_now_price, book_picture, book_style, book_theme, book_language, book_remarks, 
    book_is_sell, collection_count, create_time, create_user, update_time, update_user, 
    deteled
  </sql>
  <select id="selectByExample" parameterType="com.excellent.knowbookcommon.model.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from book
    where book_id = #{bookId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.excellent.knowbookcommon.model.pojo.Book">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book (book_id, book_name, book_info, 
      book_author, book_quality, book_Press, 
      book_before_price, book_now_price, book_picture, 
      book_style, book_theme, book_language, 
      book_remarks, book_is_sell, collection_count, 
      create_time, create_user, update_time, 
      update_user, deteled)
    values (#{bookId,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{bookInfo,jdbcType=VARCHAR}, 
      #{bookAuthor,jdbcType=VARCHAR}, #{bookQuality,jdbcType=VARCHAR}, #{bookPress,jdbcType=VARCHAR}, 
      #{bookBeforePrice,jdbcType=DOUBLE}, #{bookNowPrice,jdbcType=DOUBLE}, #{bookPicture,jdbcType=VARCHAR}, 
      #{bookStyle,jdbcType=VARCHAR}, #{bookTheme,jdbcType=VARCHAR}, #{bookLanguage,jdbcType=VARCHAR}, 
      #{bookRemarks,jdbcType=VARCHAR}, #{bookIsSell,jdbcType=INTEGER}, #{collectionCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{deteled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.excellent.knowbookcommon.model.pojo.Book">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookInfo != null">
        book_info,
      </if>
      <if test="bookAuthor != null">
        book_author,
      </if>
      <if test="bookQuality != null">
        book_quality,
      </if>
      <if test="bookPress != null">
        book_Press,
      </if>
      <if test="bookBeforePrice != null">
        book_before_price,
      </if>
      <if test="bookNowPrice != null">
        book_now_price,
      </if>
      <if test="bookPicture != null">
        book_picture,
      </if>
      <if test="bookStyle != null">
        book_style,
      </if>
      <if test="bookTheme != null">
        book_theme,
      </if>
      <if test="bookLanguage != null">
        book_language,
      </if>
      <if test="bookRemarks != null">
        book_remarks,
      </if>
      <if test="bookIsSell != null">
        book_is_sell,
      </if>
      <if test="collectionCount != null">
        collection_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="deteled != null">
        deteled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookInfo != null">
        #{bookInfo,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookQuality != null">
        #{bookQuality,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null">
        #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="bookBeforePrice != null">
        #{bookBeforePrice,jdbcType=DOUBLE},
      </if>
      <if test="bookNowPrice != null">
        #{bookNowPrice,jdbcType=DOUBLE},
      </if>
      <if test="bookPicture != null">
        #{bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="bookStyle != null">
        #{bookStyle,jdbcType=VARCHAR},
      </if>
      <if test="bookTheme != null">
        #{bookTheme,jdbcType=VARCHAR},
      </if>
      <if test="bookLanguage != null">
        #{bookLanguage,jdbcType=VARCHAR},
      </if>
      <if test="bookRemarks != null">
        #{bookRemarks,jdbcType=VARCHAR},
      </if>
      <if test="bookIsSell != null">
        #{bookIsSell,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null">
        #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deteled != null">
        #{deteled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.excellent.knowbookcommon.model.pojo.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookInfo != null">
        book_info = #{record.bookInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.bookAuthor != null">
        book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bookQuality != null">
        book_quality = #{record.bookQuality,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPress != null">
        book_Press = #{record.bookPress,jdbcType=VARCHAR},
      </if>
      <if test="record.bookBeforePrice != null">
        book_before_price = #{record.bookBeforePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.bookNowPrice != null">
        book_now_price = #{record.bookNowPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.bookPicture != null">
        book_picture = #{record.bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStyle != null">
        book_style = #{record.bookStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTheme != null">
        book_theme = #{record.bookTheme,jdbcType=VARCHAR},
      </if>
      <if test="record.bookLanguage != null">
        book_language = #{record.bookLanguage,jdbcType=VARCHAR},
      </if>
      <if test="record.bookRemarks != null">
        book_remarks = #{record.bookRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.bookIsSell != null">
        book_is_sell = #{record.bookIsSell,jdbcType=INTEGER},
      </if>
      <if test="record.collectionCount != null">
        collection_count = #{record.collectionCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.deteled != null">
        deteled = #{record.deteled,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set book_id = #{record.bookId,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_info = #{record.bookInfo,jdbcType=VARCHAR},
      book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      book_quality = #{record.bookQuality,jdbcType=VARCHAR},
      book_Press = #{record.bookPress,jdbcType=VARCHAR},
      book_before_price = #{record.bookBeforePrice,jdbcType=DOUBLE},
      book_now_price = #{record.bookNowPrice,jdbcType=DOUBLE},
      book_picture = #{record.bookPicture,jdbcType=VARCHAR},
      book_style = #{record.bookStyle,jdbcType=VARCHAR},
      book_theme = #{record.bookTheme,jdbcType=VARCHAR},
      book_language = #{record.bookLanguage,jdbcType=VARCHAR},
      book_remarks = #{record.bookRemarks,jdbcType=VARCHAR},
      book_is_sell = #{record.bookIsSell,jdbcType=INTEGER},
      collection_count = #{record.collectionCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      deteled = #{record.deteled,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.excellent.knowbookcommon.model.pojo.Book">
    update book
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookInfo != null">
        book_info = #{bookInfo,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookQuality != null">
        book_quality = #{bookQuality,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null">
        book_Press = #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="bookBeforePrice != null">
        book_before_price = #{bookBeforePrice,jdbcType=DOUBLE},
      </if>
      <if test="bookNowPrice != null">
        book_now_price = #{bookNowPrice,jdbcType=DOUBLE},
      </if>
      <if test="bookPicture != null">
        book_picture = #{bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="bookStyle != null">
        book_style = #{bookStyle,jdbcType=VARCHAR},
      </if>
      <if test="bookTheme != null">
        book_theme = #{bookTheme,jdbcType=VARCHAR},
      </if>
      <if test="bookLanguage != null">
        book_language = #{bookLanguage,jdbcType=VARCHAR},
      </if>
      <if test="bookRemarks != null">
        book_remarks = #{bookRemarks,jdbcType=VARCHAR},
      </if>
      <if test="bookIsSell != null">
        book_is_sell = #{bookIsSell,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null">
        collection_count = #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="deteled != null">
        deteled = #{deteled,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.excellent.knowbookcommon.model.pojo.Book">
    update book
    set id = #{id,jdbcType=INTEGER},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_info = #{bookInfo,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_quality = #{bookQuality,jdbcType=VARCHAR},
      book_Press = #{bookPress,jdbcType=VARCHAR},
      book_before_price = #{bookBeforePrice,jdbcType=DOUBLE},
      book_now_price = #{bookNowPrice,jdbcType=DOUBLE},
      book_picture = #{bookPicture,jdbcType=VARCHAR},
      book_style = #{bookStyle,jdbcType=VARCHAR},
      book_theme = #{bookTheme,jdbcType=VARCHAR},
      book_language = #{bookLanguage,jdbcType=VARCHAR},
      book_remarks = #{bookRemarks,jdbcType=VARCHAR},
      book_is_sell = #{bookIsSell,jdbcType=INTEGER},
      collection_count = #{collectionCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      deteled = #{deteled,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=VARCHAR}
  </update>
</mapper>